version: 2

shared-build: &shared-build
  working_directory: ~/repo
  machine:
    docker_layer_caching: true
  steps:
    - checkout
    - run:
        name: Build docker image
        command: |
          docker build -t "hollodotme/icehawk:$PHP_VERSION-cli" -f .docker/php/$PHP_VERSION/Dockerfile .docker/php/$PHP_VERSION
    - run:
        name: Login to hub.docker.com
        command: |
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
    - run:
        name: Push docker image
        command: |
          docker push "hollodotme/icehawk:$PHP_VERSION-cli"

shared-code: &shared-code
  working_directory: ~/repo/$PHP_VERSION
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "composer.json" }}-$PHP_VERSION

    - run:
        name: Update composer
        command: composer self-update

    - run:
        name: Install dependencies
        command: |
          composer install -o --prefer-dist --no-interaction

    - run:
        name: Check for PHP parse errors
        command: find . -path ./vendor/sentry -prune -o -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors detected" )

    - save_cache:
        paths:
          - ./vendor
        key: v1-dependencies-{{ checksum "composer.json" }}-$PHP_VERSION

    - run:
        name: Prepare log directories
        command: |
          mkdir -p build/logs/coverage
          mkdir -p build/logs/junit
          mkdir -p build/logs/phpmetrics

    - persist_to_workspace:
        root: ~/repo
        paths:
          - $PHP_VERSION

shared-unit-tests: &shared-unit-tests
  working_directory: ~/repo/$PHP_VERSION
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run unit tests
        command: vendor/bin/phpunit.phar -c build --testsuite Unit --log-junit build/logs/junit/junit.xml --coverage-html build/logs/coverage

    - store_test_results:
        path: build/logs/junit

    - store_artifacts:
        path: build/logs/junit
        destination: code-coverage-junit

    - store_artifacts:
        path: build/logs/coverage
        destination: code-coverage-html

shared-integration-tests: &shared-integration-tests
  working_directory: ~/repo/$PHP_VERSION
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run integration tests
        command: vendor/bin/phpunit.phar -c build --testsuite Integration --log-junit build/logs/junit/junit.xml

    - store_test_results:
        path: build/logs/junit

    - store_artifacts:
        path: build/logs/junit
        destination: code-coverage-junit

shared-phpmetrics: &shared-phpmetrics
  working_directory: ~/repo/$PHP_VERSION
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run PHP metrics
        command: vendor/bin/phpmetrics.phar --report-html=build/logs/phpmetrics src/

    - store_artifacts:
        path: build/logs/phpmetrics
        destination: php-metrics-report

shared-phpstan: &shared-phpstan
  working_directory: ~/repo/$PHP_VERSION
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run PHPStan
        command: vendor/bin/phpstan.phar analyze --level max src/

jobs:
  "php-7.2-build":
    <<: *shared-build

  "php-7.3-build":
    <<: *shared-build

  "php-7.2-code":
    <<: *shared-code

  "php-7.3-code":
    <<: *shared-code

  "php-7.2-unit-tests":
    <<: *shared-unit-tests

  "php-7.3-unit-tests":
    <<: *shared-unit-tests

  "php-7.2-integration-tests":
    <<: *shared-integration-tests

  "php-7.3-integration-tests":
    <<: *shared-integration-tests

  "php-7.2-phpstan":
    <<: *shared-phpstan

  "php-7.3-phpstan":
    <<: *shared-phpstan

  "php-7.2-phpmetrics":
    <<: *shared-phpmetrics

  "php-7.3-phpmetrics":
    <<: *shared-phpmetrics

workflows:
  version: 2
  build-test-analyze:
    jobs:

      # PHP 7.2 jobs

      - "php-7.2-build":
          context: php72
      - "php-7.2-code":
          context: php72
          requires:
            - "php-7.2-build"
      - "php-7.2-phpstan":
          context: php72
          requires:
            - "php-7.2-code"
      - "php-7.2-unit-tests":
          context: php72
          requires:
            - "php-7.2-phpstan"
      - "php-7.2-integration-tests":
          context: php72
          requires:
            - "php-7.2-phpstan"
      - "php-7.2-phpmetrics":
          context: php72
          requires:
            - "php-7.2-unit-tests"
            - "php-7.2-integration-tests"

      # PHP 7.3 jobs

      - "php-7.3-build":
          context: php73
      - "php-7.3-code":
          context: php73
          requires:
            - "php-7.3-build"
      - "php-7.3-phpstan":
          context: php73
          requires:
            - "php-7.3-code"
      - "php-7.3-unit-tests":
          context: php73
          requires:
            - "php-7.3-phpstan"
      - "php-7.3-integration-tests":
          context: php73
          requires:
            - "php-7.3-phpstan"
      - "php-7.3-phpmetrics":
          context: php73
          requires:
            - "php-7.3-unit-tests"
            - "php-7.3-integration-tests"
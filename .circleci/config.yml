version: 2

# Specify working directories for each PHP version
# Unfortunately Circle CI is not able to expand environment/context variables in
# the value for working_directory
workdir-72: &workdir-72
  working_directory: ~/repo/7.2

workdir-73: &workdir-73
  working_directory: ~/repo/7.3

workdir-74: &workdir-74
  working_directory: ~/repo/7.4

# Define steps to build docker images for each PHP version
shared-build: &shared-build
  working_directory: ~/repo
  machine:
    docker_layer_caching: false
  steps:
    - checkout
    - run:
        name: Build docker image
        command: >
          docker build
          -t "hollodotme/icehawk:$PHP_VERSION-cli"
          -f .docker/php/$PHP_VERSION/Dockerfile
          .docker/php/$PHP_VERSION
    - run:
        name: Login to hub.docker.com
        command: |
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
    - run:
        name: Push docker image
        command: |
          docker push "hollodotme/icehawk:$PHP_VERSION-cli"

# Define steps to build the code and its dependencies
# Persist it to the workspace when done
shared-code: &shared-code
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "composer.json" }}-$PHP_VERSION

    - run:
        name: Install composer
        command: |
          EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

          if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
          then
              >&2 echo 'ERROR: Invalid installer signature'
              rm composer-setup.php
              exit 1
          fi

          php composer-setup.php --quiet --install-dir=/usr/bin --filename=composer
          RESULT=$?
          rm composer-setup.php
          exit $RESULT

    - run:
        name: Update composer
        command: composer self-update

    - run:
        name: Install dependencies
        command: |
          composer install -o --prefer-dist --no-interaction

    - save_cache:
        paths:
          - ./vendor
        key: v1-dependencies-{{ checksum "composer.json" }}-$PHP_VERSION

    - run:
        name: Prepare log directories
        command: |
          mkdir -p build/logs/coverage
          mkdir -p build/logs/junit
          mkdir -p build/logs/phpmetrics

    - persist_to_workspace:
        root: ~/repo
        paths:
          - "*"

# Define steps to check for PHP parse errors
shared-linting: &shared-linting
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Check for PHP parse errors
        command: find ./src -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors detected" )

# Define steps to run unit tests
shared-unit-tests: &shared-unit-tests
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run unit tests
        command: vendor/bin/phpunit.phar -c build --testsuite Unit --log-junit build/logs/junit/junit.xml --coverage-html build/logs/coverage --coverage-clover=coverage.xml

    - run:
        name: Install bash
        command: apk add --no-cache bash

    - run:
        name: Upload code coverage to codecov.io
        command: |
          bash
          bash <(curl -s https://codecov.io/bash)

    - store_test_results:
        path: build/logs/junit

    - store_artifacts:
        path: build/logs/junit
        destination: code-coverage-junit

    - store_artifacts:
        path: build/logs/coverage
        destination: code-coverage-html

# Define steps to run integration tests
shared-integration-tests: &shared-integration-tests
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run integration tests
        command: vendor/bin/phpunit.phar -c build --testsuite Integration --log-junit build/logs/junit/junit.xml

    - store_test_results:
        path: build/logs/junit

    - store_artifacts:
        path: build/logs/junit
        destination: code-coverage-junit

# Define steps to run phpmetrics
shared-phpmetrics: &shared-phpmetrics
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run PHP metrics
        command: vendor/bin/phpmetrics.phar --report-html=build/logs/phpmetrics src/

    - store_artifacts:
        path: build/logs/phpmetrics
        destination: php-metrics-report

# Define steps to run phpstan
shared-phpstan: &shared-phpstan
  docker:
    - image: hollodotme/icehawk:$PHP_VERSION-cli
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Run PHPStan
        command: vendor/bin/phpstan.phar analyze --level max src/

# Define steps to auto-create a github release, if a tag is present
shared-github-release: &shared-github-release
  docker:
    - image: cibuilds/github
  steps:
    - attach_workspace:
        at: ~/repo
    - run:
        name: Display git tag file
        command: |
          VERSION=$(cat ./TAG)
          echo ${VERSION}
    - run:
        name: Create release at GitHub
        command: VERSION=$(cat ./TAG) &&
          if [[ $VERSION =~ ^v.*$ ]] ;
          then
          ghr -t ${GITHUB_OAUTH_TOKEN}
          -u $CIRCLE_PROJECT_USERNAME
          -r $CIRCLE_PROJECT_REPONAME
          -c ${CIRCLE_SHA1}
          -b "See [CHANGELOG](https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/blob/${VERSION}/CHANGELOG.md)"
          -delete ${VERSION} ./docs;
          else
          echo "No version found - no release triggered";
          fi

# Define the actual jobs from the templates above
jobs:
  "php-7.2-build":
    <<: *shared-build

  "php-7.3-build":
    <<: *shared-build

  "php-7.4-build":
    <<: *shared-build

  "php-7.2-code":
    <<: *shared-code
    <<: *workdir-72

  "php-7.3-code":
    <<: *shared-code
    <<: *workdir-73

  "php-7.4-code":
    <<: *shared-code
    <<: *workdir-74

  "php-7.2-linting":
    <<: *shared-linting
    <<: *workdir-72

  "php-7.3-linting":
    <<: *shared-linting
    <<: *workdir-73

  "php-7.4-linting":
    <<: *shared-linting
    <<: *workdir-74

  "php-7.2-unit-tests":
    <<: *shared-unit-tests
    <<: *workdir-72

  "php-7.3-unit-tests":
    <<: *shared-unit-tests
    <<: *workdir-73

  "php-7.4-unit-tests":
    <<: *shared-unit-tests
    <<: *workdir-74

  "php-7.2-integration-tests":
    <<: *shared-integration-tests
    <<: *workdir-72

  "php-7.3-integration-tests":
    <<: *shared-integration-tests
    <<: *workdir-73

  "php-7.4-integration-tests":
    <<: *shared-integration-tests
    <<: *workdir-74

  "php-7.2-phpstan":
    <<: *shared-phpstan
    <<: *workdir-72

  "php-7.3-phpstan":
    <<: *shared-phpstan
    <<: *workdir-73

  "php-7.4-phpstan":
    <<: *shared-phpstan
    <<: *workdir-74

  "php-7.2-phpmetrics":
    <<: *shared-phpmetrics
    <<: *workdir-72

  "php-7.3-phpmetrics":
    <<: *shared-phpmetrics
    <<: *workdir-73

  "php-7.4-phpmetrics":
    <<: *shared-phpmetrics
    <<: *workdir-74

  "php-7.2-github-release":
    <<: *shared-github-release
    <<: *workdir-72

  "php-7.3-github-release":
    <<: *shared-github-release
    <<: *workdir-73

  "php-7.4-github-release":
    <<: *shared-github-release
    <<: *workdir-74

# Define the workflows for each PHP version
workflows:
  version: 2
  build-test-analyze:
    jobs:

      # PHP 7.2 jobs

      - "php-7.2-build":
          context: php72
      - "php-7.2-code":
          context: php72
          requires:
            - "php-7.2-build"
      - "php-7.2-linting":
          context: php72
          requires:
            - "php-7.2-code"
      - "php-7.2-phpstan":
          context: php72
          requires:
            - "php-7.2-code"
      - "php-7.2-unit-tests":
          context: php72
          requires:
            - "php-7.2-linting"
            - "php-7.2-phpstan"
      - "php-7.2-integration-tests":
          context: php72
          requires:
            - "php-7.2-linting"
            - "php-7.2-phpstan"
      - "php-7.2-phpmetrics":
          context: php72
          requires:
            - "php-7.2-unit-tests"
            - "php-7.2-integration-tests"
      - "php-7.2-github-release":
          context: php72
          requires:
            - "php-7.2-phpmetrics"
          filters:
            branches:
              only: master

      # PHP 7.3 jobs

      - "php-7.3-build":
          context: php73
      - "php-7.3-code":
          context: php73
          requires:
            - "php-7.3-build"
      - "php-7.3-linting":
          context: php73
          requires:
            - "php-7.3-code"
      - "php-7.3-phpstan":
          context: php73
          requires:
            - "php-7.3-code"
      - "php-7.3-unit-tests":
          context: php73
          requires:
            - "php-7.3-linting"
            - "php-7.3-phpstan"
      - "php-7.3-integration-tests":
          context: php73
          requires:
            - "php-7.3-linting"
            - "php-7.3-phpstan"
      - "php-7.3-phpmetrics":
          context: php73
          requires:
            - "php-7.3-unit-tests"
            - "php-7.3-integration-tests"
      - "php-7.3-github-release":
          context: php73
          requires:
            - "php-7.3-phpmetrics"
          filters:
            branches:
              only: master

      # PHP 7.4 jobs

      - "php-7.4-build":
          context: php74
      - "php-7.4-code":
          context: php74
          requires:
            - "php-7.4-build"
      - "php-7.4-linting":
          context: php74
          requires:
            - "php-7.4-code"
      - "php-7.4-phpstan":
          context: php74
          requires:
            - "php-7.4-code"
      - "php-7.4-unit-tests":
          context: php74
          requires:
            - "php-7.4-linting"
            - "php-7.4-phpstan"
      - "php-7.4-integration-tests":
          context: php74
          requires:
            - "php-7.4-linting"
            - "php-7.4-phpstan"
      - "php-7.4-phpmetrics":
          context: php74
          requires:
            - "php-7.4-unit-tests"
            - "php-7.4-integration-tests"
      - "php-7.4-github-release":
          context: php74
          requires:
            - "php-7.4-phpmetrics"
          filters:
            branches:
              only: master